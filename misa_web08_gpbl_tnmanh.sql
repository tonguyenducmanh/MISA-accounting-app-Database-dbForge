--
-- Script was generated by Devart dbForge Studio 2022 for MySQL, Version 9.1.8.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 17/09/2022 9:33:27 SA
-- Server version: 8.0.30
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE `misa.web08.gpbl.tnmanh`;

--
-- Drop procedure `Proc_employee_DeleteOne`
--
DROP PROCEDURE IF EXISTS Proc_employee_DeleteOne;

--
-- Drop procedure `Proc_employee_DetailOne`
--
DROP PROCEDURE IF EXISTS Proc_employee_DetailOne;

--
-- Drop procedure `Proc_employee_GetPaging`
--
DROP PROCEDURE IF EXISTS Proc_employee_GetPaging;

--
-- Drop procedure `Proc_employee_EditOne`
--
DROP PROCEDURE IF EXISTS Proc_employee_EditOne;

--
-- Drop procedure `Proc_employee_InsertOne`
--
DROP PROCEDURE IF EXISTS Proc_employee_InsertOne;

--
-- Drop procedure `Proc_employee_MaxEmployeeCode`
--
DROP PROCEDURE IF EXISTS Proc_employee_MaxEmployeeCode;

--
-- Drop procedure `Proc_employee_SelectAll`
--
DROP PROCEDURE IF EXISTS Proc_employee_SelectAll;

--
-- Drop table `employee`
--
DROP TABLE IF EXISTS employee;

--
-- Drop procedure `Proc_positions_SelectAll`
--
DROP PROCEDURE IF EXISTS Proc_positions_SelectAll;

--
-- Drop table `positions`
--
DROP TABLE IF EXISTS positions;

--
-- Drop procedure `Proc_department_SelectAll`
--
DROP PROCEDURE IF EXISTS Proc_department_SelectAll;

--
-- Drop table `department`
--
DROP TABLE IF EXISTS department;

--
-- Set default database
--
USE `misa.web08.gpbl.tnmanh`;

--
-- Create table `department`
--
CREATE TABLE department (
  DepartmentID char(36) NOT NULL COMMENT 'ID đơn vị phòng ban',
  DepartmentCode varchar(20) NOT NULL COMMENT 'Mã đơn vị phòng ban',
  DepartmentName varchar(255) NOT NULL COMMENT 'Tên đơn vị phòng ban',
  Description varchar(255) DEFAULT NULL COMMENT 'Giới thiệu về đơn vị, phòng ban',
  CreatedDate datetime NOT NULL COMMENT 'Ngày tạo',
  CreatedBy varchar(100) NOT NULL COMMENT 'Tạo bởi người dùng',
  ModifiedDate datetime NOT NULL COMMENT 'Ngày chỉnh sửa gần nhất',
  ModifiedBy varchar(100) NOT NULL COMMENT 'Người chỉnh sửa gần nhất',
  PRIMARY KEY (DepartmentID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'Bảng đơn vị phòng ban';

--
-- Create index `DepartmentCode` on table `department`
--
ALTER TABLE department
ADD UNIQUE INDEX DepartmentCode (DepartmentCode);

DELIMITER $$

--
-- Create procedure `Proc_department_SelectAll`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_department_SelectAll ()
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Lấy toàn bộ danh sách bản ghi trong department
  -- Modified by:
  -- Code chạy thử Call Proc_department_SelectAll();
  '
BEGIN
  SELECT
    DepartmentID,
    DepartmentCode,
    DepartmentName,
    Description
  FROM department;
END
$$

DELIMITER ;

--
-- Create table `positions`
--
CREATE TABLE positions (
  PositionID char(36) NOT NULL COMMENT 'ID chức vụ',
  PositionCode varchar(20) NOT NULL COMMENT 'Mã chức vụ',
  PositionName varchar(255) NOT NULL COMMENT 'Tên chức danh',
  Description varchar(255) DEFAULT NULL COMMENT 'Giới thiệu về chức danh',
  CreatedDate datetime NOT NULL COMMENT 'Ngày tạo',
  CreatedBy varchar(100) NOT NULL COMMENT 'Tạo bởi người dùng',
  ModifiedDate datetime NOT NULL COMMENT 'Ngày chỉnh sửa gần nhất',
  ModifiedBy varchar(100) NOT NULL COMMENT 'Người chỉnh sửa gần nhất',
  PRIMARY KEY (PositionID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 1820,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'Bảng chức vụ';

--
-- Create index `DepartmentCode` on table `positions`
--
ALTER TABLE positions
ADD UNIQUE INDEX DepartmentCode (PositionCode);

DELIMITER $$

--
-- Create procedure `Proc_positions_SelectAll`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_positions_SelectAll ()
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Lấy toàn bộ danh sách bản ghi trong positions
  -- Modified by:
  -- Code chạy thử Call Proc_positions_SelectAll();
  '
BEGIN
  SELECT
    PositionID,
    PositionCode,
    PositionName,
    Description
  FROM positions;
END
$$

DELIMITER ;

--
-- Create table `employee`
--
CREATE TABLE employee (
  EmployeeID char(36) NOT NULL COMMENT 'Id nhân viên',
  EmployeeCode varchar(20) NOT NULL COMMENT 'Mã nhân viên',
  FullName varchar(100) NOT NULL COMMENT 'Tên nhân viên',
  DateOfBirth datetime DEFAULT NULL COMMENT 'Ngày sinh của nhân viên',
  EmployeeGender tinyint DEFAULT NULL COMMENT 'Giới tính nhân viên',
  EmployeeType tinyint NOT NULL COMMENT 'Loại nhân viên, là khách hàng hay là nhà cung cấp',
  IdentityCard varchar(25) DEFAULT NULL COMMENT 'Căn cước công dân/ chứng minh thư nhân viên',
  IdentityPlace varchar(255) DEFAULT NULL COMMENT 'Nơi cấp  căn cước công dân/ chứng minh thư nhân viên',
  Address varchar(255) DEFAULT NULL COMMENT 'Địa chỉ của nhân viên',
  PNumRelative varchar(50) DEFAULT NULL COMMENT 'Số điện thoại cá nhân',
  PNumFix varchar(50) DEFAULT NULL COMMENT 'Số điện thoại cố định',
  Email varchar(100) DEFAULT NULL COMMENT 'Địa chỉ email',
  BankAccount varchar(25) DEFAULT NULL COMMENT 'Số tài khoản ngân hàng',
  BankName varchar(255) DEFAULT NULL COMMENT 'Tên ngân hàng',
  BankBranch varchar(255) DEFAULT NULL COMMENT 'Tên chi nhánh ngân hàng',
  DepartmentID char(36) NOT NULL COMMENT 'Mã đơn vị',
  DepartmentName varchar(255) NOT NULL COMMENT 'Tên đơn vị',
  PositionID char(36) NOT NULL COMMENT 'Mã chức danh',
  PositionName varchar(255) NOT NULL COMMENT 'Tên chức danh',
  CreatedDate datetime NOT NULL COMMENT 'Ngày tạo',
  CreatedBy varchar(100) NOT NULL COMMENT 'Tạo bởi người dùng',
  ModifiedDate datetime NOT NULL COMMENT 'Ngày sửa gần đây nhất',
  ModifiedBy varchar(100) NOT NULL COMMENT 'Người sửa gần đây nhất',
  PRIMARY KEY (EmployeeID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 1660,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'Bảng nhân viên';

--
-- Create index `EmployeeID` on table `employee`
--
ALTER TABLE employee
ADD UNIQUE INDEX EmployeeID (EmployeeID);

--
-- Create foreign key
--
ALTER TABLE employee
ADD CONSTRAINT FK_Employee_Department_DepartmentID FOREIGN KEY (DepartmentID)
REFERENCES department (DepartmentID);

--
-- Create foreign key
--
ALTER TABLE employee
ADD CONSTRAINT FK_Employee_Positions_PositionID FOREIGN KEY (PositionID)
REFERENCES positions (PositionID);

DELIMITER $$

--
-- Create procedure `Proc_employee_SelectAll`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_SelectAll ()
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Lấy toàn bộ danh sách bản ghi trong employee
  -- Modified by:
  -- Code chạy thử Call Proc_employee_SelectAll();
  '
BEGIN
  SELECT
    EmployeeID,
    EmployeeCode,
    FullName,
    EmployeeGender,
    EmployeeType,
    DateOfBirth,
    IdentityCard,
    IdentityPlace,
    Address,
    PNumRelative,
    PNumFix,
    Email,
    PositionID,
    DepartmentID,
    PositionName,
    DepartmentName,
    BankAccount,
    BankName,
    BankBranch
  FROM employee;
END
$$

--
-- Create procedure `Proc_employee_MaxEmployeeCode`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_MaxEmployeeCode ()
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Lấy bản ghi có mã nhân viên lớn nhất trong bảng employee
  -- Modified by:
  -- Code chạy thử Call Proc_employee_MaxEmployeeCode();
  '
BEGIN
  SELECT
    MAX(EmployeeCode)
  FROM employee;
END
$$

--
-- Create procedure `Proc_employee_InsertOne`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_InsertOne (IN v_EmployeeID char(36), -- ID nhân viên 
IN v_EmployeeCode varchar(20), IN v_FullName varchar(100), -- tên nhân viên
IN v_DateOfBirth datetime, -- ngày sinh nhân viên
IN v_EmployeeGender tinyint, -- giới tính nhân viên
IN v_EmployeeType tinyint, -- loại nhân viên là khách hàng hay là nhà cung cấp
IN v_IdentityCard varchar(25), -- căn cước công dân/ chứng minh thư nhân viên
IN v_IdentityDate datetime, -- ngày cấp căn cước công dân / chứng minh thư
IN v_IdentityPlace varchar(255), -- nơi cấp căn cước công dân / chứng minh thư
IN v_Address varchar(255), -- địa chỉ nhân viên
IN v_PNumRelative varchar(50), -- số điện thoại cá nhân
IN v_PNumFix varchar(50), -- số điện thoại cố định
IN v_Email varchar(100), -- email nhân viên
IN v_BankAccount varchar(25), -- tài khoản ngân hàng
IN v_BankName varchar(255), -- tên ngân hàng
IN v_BankBranch varchar(255), -- chi nhánh ngân hàng
IN v_DepartmentID char(36), -- id đơn vị
IN v_DepartmentName varchar(255), -- tên đơn vị
IN v_PositionID char(36), -- id chức danh
IN v_PositionName varchar(255), -- tên chức danh
IN v_CreatedDate datetime, -- ngày tạo nhân viên
IN v_CreatedBy varchar(100), -- người tạo nhân viên
IN v_ModifiedDate datetime, -- ngày sửa nhân viên gần nhất
IN v_ModifiedBy varchar(100))
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Thêm 1 nhân viên mới vào trong bảng employee
  -- Modified by:
  -- Code chạy thử Call Proc_employee_InsertOne(
  -- ''NV12345'', ''Tô Nguyễn Đức Mạnh'', 14/03/2000, 0, 0, ''12312124124'', ''CA Thái Bình'', ''Thái Bình'', ''0981071321'', ''0129211291'', ''ducmanh14032000@gmail.com'', ''1209321031'', ''BIDV'', ''Cầu Giấy'',''11452b0c-768e-5ff7-0d63-eeb1d8ed8cef'' , ''Phòng Hành Chính'', ''39446ba3-3071-7af6-a5a9-deaf32c96293'', ''Giám đốc'', NOW(), ''Bùi Thúy Quỳnh'', NOW(), ''Bùi Thúy Quỳnh''
  );
  -- chú ý : code chạy thử xóa hết các dấu nháy '' và thay bằng nháy đơn
  '
BEGIN
  INSERT employee (EmployeeID, EmployeeCode, FullName, DateOfBirth, EmployeeGender, EmployeeType, IdentityCard, IdentityPlace, Address, PNumRelative, PNumFix, Email, BankAccount, BankName, BankBranch, DepartmentID, DepartmentName, PositionID, PositionName, CreatedDate, CreatedBy, ModifiedDate, ModifiedBy)
    VALUES (v_EmployeeID, v_EmployeeCode, v_FullName, v_DateOfBirth, v_EmployeeGender, v_EmployeeType, v_IdentityCard, v_IdentityPlace, v_Address, v_PNumRelative, v_PNumFix, v_Email, v_BankAccount, v_BankName, v_BankBranch, v_DepartmentID, v_DepartmentName, v_PositionID, v_PositionName, v_CreatedDate, v_CreatedBy, v_ModifiedDate, v_ModifiedBy);

END
$$

--
-- Create procedure `Proc_employee_EditOne`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_EditOne (IN v_EmployeeID char(36), -- Mã nhân viên đang sửa
IN v_EmployeeCode varchar(20), IN v_FullName varchar(100), -- tên nhân viên
IN v_DateOfBirth datetime, -- ngày sinh nhân viên
IN v_EmployeeGender tinyint, -- giới tính nhân viên
IN v_EmployeeType tinyint, -- loại nhân viên, là khách hàng hay là nhà cung cấp
IN v_IdentityCard varchar(25), -- căn cước công dân/ chứng minh thư nhân viên
IN v_IdentityDate datetime, -- ngày cấp căn cước công dân / chứng minh thư
IN v_IdentityPlace varchar(255), -- nơi cấp căn cước công dân / chứng minh thư
IN v_Address varchar(255), -- địa chỉ nhân viên
IN v_PNumRelative varchar(50), -- số điện thoại cá nhân
IN v_PNumFix varchar(50), -- số điện thoại cố định
IN v_Email varchar(100), -- email nhân viên
IN v_BankAccount varchar(25), -- tài khoản ngân hàng
IN v_BankName varchar(255), -- tên ngân hàng
IN v_BankBranch varchar(255), -- chi nhánh ngân hàng
IN v_DepartmentID char(36), -- id đơn vị
IN v_DepartmentName varchar(255), -- tên đơn vị
IN v_PositionID char(36), -- id chức danh
IN v_PositionName varchar(255), -- tên chức danh
IN v_CreatedDate datetime, -- ngày tạo nhân viên
IN v_CreatedBy varchar(100), -- người tạo nhân viên
IN v_ModifiedDate datetime, -- ngày sửa nhân viên gần nhất
IN v_ModifiedBy varchar(100))
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Sủa 1 nhân viên có sẵn trong bảng employee
  -- Modified by:
  -- Code chạy thử Call Proc_employee_EditOne(
  -- ''29dcec4b-6bba-5878-1735-60b3ebf808a9'',
  -- ''NV12345'', ''Tô Nguyễn Đức Mạnh'', 14/03/2000, 0, ''12312124124'', ''CA Thái Bình'', ''Thái Bình'', ''0981071321'', ''0129211291'', ''ducmanh14032000@gmail.com'', ''1209321031'', ''BIDV'', ''Cầu Giấy'',''11452b0c-768e-5ff7-0d63-eeb1d8ed8cef'' , ''Phòng Hành Chính'', ''39446ba3-3071-7af6-a5a9-deaf32c96293'', ''Giám đốc'', NOW(), ''Bùi Thúy Quỳnh'', NOW(), ''Bùi Thúy Quỳnh''
  );
  -- chú ý : code chạy thử xóa hết các dấu nháy '' và thay bằng nháy đơn
  '
BEGIN
  UPDATE employee e
  SET EmployeeCode = v_EmployeeCode,
      FullName = v_FullName,
      DateOfBirth = v_DateOfBirth,
      EmployeeGender = v_EmployeeGender,
      EmployeeType = v_EmployeeType,
      IdentityCard = v_IdentityCard,
      IdentityPlace = v_IdentityDate,
      Address = v_Address,
      PNumRelative = v_PNumRelative,
      PNumFix = v_PNumFix,
      Email = v_Email,
      BankAccount = v_BankAccount,
      BankName = v_BankName,
      BankBranch = v_BankBranch,
      DepartmentID = v_DepartmentID,
      DepartmentName = v_DepartmentName,
      PositionID = v_PositionID,
      PositionName = v_PositionName,
      CreatedDate = v_CreatedDate,
      CreatedBy = v_CreatedBy,
      ModifiedDate = v_ModifiedDate,
      ModifiedBy = v_ModifiedBy
  WHERE EmployeeID = v_EmployeeID;
END
$$

--
-- Create procedure `Proc_employee_GetPaging`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_GetPaging (IN v_Offset int, -- Thứ tự bản ghi bắt đầu lấy
IN v_Limit int, -- Số bản ghi muốn lấy
IN v_Sort varchar(100), -- Điều kiện sắp xếp
IN v_Where varchar(1000) -- Điều kiện tìm kiếm
)
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Lấy danh sách nhân viên và tổng nhân viên có phân trang
  -- Modified by:
  -- Code chạy thử Call Proc_employee_GetPaging(0, 10, NULL, NULL);
  '
BEGIN
  -- Kiểm tra tham số đầu vào, nếu v_Where bị NULL --> gán giá trị vào cho v_Where = ''
  -- SELECT e.EmployeeCode, e.FullName, e.EmployeeGender, e.DateOfBirth, e.IdentityCard, e.PositionName, e.DepartmentName, e.BankAccount, e.BankName
  -- FROM  employee e WHERE 1=1 ;
  -- mặc định để 1=1 để nó trả về điều kiện true
  IF IFNULL(v_Where, '') = '' THEN
    SET v_Where = '1=1';
  END IF;

  -- Kiểm tra nếu tham số đầu vào v_Sort bị NULL  --> gán giá trị cho v_Sort = ''
  -- mặc định để sắp xếp theo trường ngày sửa gần nhất
  -- SELECT e.EmployeeCode, e.FullName, e.EmployeeGender,e.EmployeeType , e.DateOfBirth, e.IdentityCard, e.PositionName, e.DepartmentName, e.BankAccount, e.BankName
  -- FROM employee e WHERE 1=1 ORDER BY ModifiedDate DESC
  IF IFNULL(v_Sort, '') = '' THEN
    SET v_Sort = 'ModifiedDate DESC';
  END IF;

  -- kiểm tra xem giá trị v_Limit có = -1 không, hiểu ngầm trong công ty bằng -1 là k có limit
  IF v_Limit = -1 THEN
    SET @filterQuery = CONCAT('SELECT e.EmployeeID, e.EmployeeCode, e.FullName, e.EmployeeGender, e.EmployeeType ,e.DateOfBirth, e.IdentityCard, e.PositionName, e.DepartmentName, e.BankAccount, e.BankName FROM employee e WHERE ', v_Where, ' ORDER BY ', v_Sort);
  ELSE
    SET @filterQuery = CONCAT('SELECT e.EmployeeID, e.EmployeeCode, e.FullName, e.EmployeeGender, e.EmployeeType , e.DateOfBirth, e.IdentityCard, e.PositionName, e.DepartmentName, e.BankAccount, e.BankName FROM employee e WHERE ', v_Where, ' ORDER BY ', v_Sort, ' LIMIT ', v_Limit, ' OFFSET ', v_Offset);
  END IF;

  -- @filterQuery là 1 biến có kiểu dữ liệu là string
  PREPARE filterQuery FROM @filterQuery;
  EXECUTE filterQuery;
  DEALLOCATE PREPARE filterQuery;

  -- lấy ra tổng số bản ghi theo điều kiện lọc
  SET @filterQuery = CONCAT('SELECT count(EmployeeID) AS TotalCount FROM employee WHERE ', v_Where);
  PREPARE filterQuery FROM @filterQuery;
  EXECUTE filterQuery;
  DEALLOCATE PREPARE filterQuery;
END
$$

--
-- Create procedure `Proc_employee_DetailOne`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_DetailOne (IN v_id char(36) -- Id dùng để lấy thông tin chi tiết của 1 người
)
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Lấy chi tiết 1 bản ghi trong bảng employee theo id
  -- Modified by:
  -- Code chạy thử Call Proc_employee_DetailOne(11131abd-1b99-688b-96f6-423b4e874d0f);
  '
BEGIN
  SET @getOneQuery = CONCAT('
  SELECT e.EmployeeID,
  e.EmployeeCode, 
  e.FullName, 
  e.EmployeeGender,
  e.EmployeeType, 
  e.DateOfBirth, 
  e.IdentityCard, 
  e.IdentityPlace, 
  e.Address, 
  e.PNumRelative, 
  e.PNumFix , 
  e.Email,
  e.PositionID,
  e.DepartmentID,
  e.PositionName, 
  e.DepartmentName, 
  e.BankAccount, 
  e.BankName,
  e.BankBranch
  FROM employee e WHERE e.EmployeeId = ''',
  v_id, '''');
  PREPARE getOneQuery FROM @getOneQuery;
  EXECUTE getOneQuery;
  DEALLOCATE PREPARE getOneQuery;
END
$$

--
-- Create procedure `Proc_employee_DeleteOne`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE Proc_employee_DeleteOne (IN v_Id char(36) -- id của employee muốn xóa
)
COMMENT '
  -- Author: TNMANH
  -- Created date: 15/09/2022
  -- Description: Xóa 1 bản ghi trong bảng employee theo id
  -- Modified by:
  -- Code chạy thử Call Proc_employee_DeleteOne(11131abd-1b99-688b-96f6-423b4e874d0f);
  '
BEGIN
  SET @deleteQuery = CONCAT('DELETE FROM employee WHERE EmployeeID = ''', v_Id, '''');
  -- @deleteQuery là 1 biến có kiểu dữ liệu là string
  PREPARE deleteQuery FROM @deleteQuery;
  EXECUTE deleteQuery;
  DEALLOCATE PREPARE deleteQuery;
END
$$

DELIMITER ;

-- 
-- Dumping data for table positions
--
INSERT INTO positions VALUES
('2102924a-510c-7251-a026-71cca92946bf', 'P007', 'Phó phòng', 'Laborum perspiciatis dolores obcaecati. Voluptatem natus quasi est cupiditate? Autem cumque quis. Similique neque praesentium. Quibusdam incidunt aut.', '2021-01-01 00:00:04', 'Phạm Hải Cường ', '2022-01-01 00:03:18', 'Phạm Minh Linh '),
('3541ff76-58f0-6d1a-e836-63d5d5eff719', 'P003', 'Kế Toán', 'Et ut nihil ab sint vero deserunt. Sunt aut magnam hic recusandae excepturi officia.', '2021-01-01 00:01:22', 'Phạm Minh Hoàng ', '2022-07-25 19:30:17', 'Cao Minh Trung '),
('39446ba3-3071-7af6-a5a9-deaf32c96293', 'P006', 'Giám đốc', 'Qui quaerat sit nam animi ut deserunt. Nisi unde aut quis atque velit unde!', '2021-07-20 19:37:05', 'Trần Thái Kiên ', '2022-07-31 16:36:20', 'Trần Thái Mạnh '),
('423d5b84-2191-6cce-df3d-c9e9e9038fe2', 'P008', 'Nhân viên', 'Praesentium ut minima. Natus rerum alias aut est sit. Nostrum eos minima aspernatur natus error. Est omnis ab.', '2021-06-23 06:28:26', 'Liễu Ngọc Trung ', '2022-02-11 10:24:59', 'Trương Việt Hoàng '),
('447816de-6069-15bf-de3d-c9e9e9038fe2', 'P004', 'Phó phòng', 'Quae error ad. Suscipit minima quaerat. Nihil modi pariatur. Eius laboriosam itaque? Quasi autem ad; quia sequi totam; quas aut non. Iste ut quos. Non ut est!', '2021-04-28 11:46:20', 'Trương Văn Linh ', '2022-01-30 18:14:13', 'Khổng Phúc Đông '),
('48b51439-3625-6c0c-7532-03c92da59c43', 'P002', 'Phó giám đốc', 'Quaerat dignissimos voluptatem libero possimus eius. Dolorem explicabo quisquam; modi quidem voluptatem; quo hic exercitationem. Architecto culpa voluptates.', '2021-05-10 06:39:12', 'Quốc Gia Hiếu ', '2022-03-24 20:14:05', 'Trần Minh Trung '),
('71952621-23c8-61d2-d0eb-e423f1575e00', 'P009', 'Kế Toán', 'Sunt voluptatem incidunt. Quia omnis eaque; in molestiae totam; nihil beatae voluptatibus? Aliquid at odio! Aut qui eaque. Tempora sit omnis.', '2021-01-30 16:33:17', 'Phạm Thái Hoàng ', '2022-01-16 02:34:52', 'Lê Hải Tuấn '),
('74b4ef62-677e-21c3-88db-f21ac591aca5', 'P005', 'Thực tập sinh', 'Quisquam ut sapiente. Cum ea vitae! Sit ea delectus. Sit unde dolores. Neque voluptates sit. Ipsa repellendus nulla. Voluptatem quam omnis! Sequi quidem ab...', '2021-01-01 02:39:05', 'Đặng Minh Nam ', '2022-01-21 23:15:36', 'Nguyễn Việt Cường '),
('79aca385-65e3-1ebe-f488-479bce9b28fc', 'P001', 'Phó phòng', 'In id ut et recusandae quasi dignissimos. Aliquid exercitationem quidem tempore. Unde harum dolores odit fugit officia aspernatur!', '2021-04-19 03:53:55', ' Mai Ngân', '2022-06-11 06:16:26', 'Quốc Văn Hoàng ');

-- 
-- Dumping data for table department
--
INSERT INTO department VALUES
('11452b0c-768e-5ff7-0d63-eeb1d8ed8cef', 'D001', 'Phòng Hành Chính', 'Quo et consectetur. Omnis dolorem delectus quo corporis suscipit officiis; incidunt saepe vel nostrum ex et sed.', '2021-01-24 01:47:24', 'Phạm Minh Mạnh ', '2022-02-08 10:04:12', ' Mai Lành'),
('142cb08f-7c31-21fa-8e90-67245e8b283e', 'D004', 'Phòng Kế Toán', 'Praesentium excepturi architecto ipsum possimus. Dolore molestiae omnis nihil. Aliquid perspiciatis qui. Ea sed nam; accusantium ipsam ut. Soluta.', '2021-01-01 00:07:13', 'Trần Tuấn Mạnh ', '2022-01-01 00:00:04', ' Xuân Hồng'),
('17120d02-6ab5-3e43-18cb-66948daf6128', 'D005', 'Phòng Công Nghệ Thông Tin', 'Neque amet ut. Natus quis ratione. Itaque tempore ut. Enim impedit magnam. Quo consectetur temporibus! Excepturi debitis perspiciatis. Quis et expedita!', '2021-04-05 03:04:46', 'Nguyễn Văn Long ', '2022-01-23 04:25:50', 'Liễu Gia Tuấn '),
('469b3ece-744a-45d5-957d-e8c757976496', 'D002', 'Phòng Nhân Sự', 'Quam odit provident dolor. Natus error velit consequatur hic vero ut! Est nemo molestiae adipisci qui quia ipsam.', '2021-02-05 04:18:16', 'Tô Thái Long ', '2022-06-10 01:02:32', 'Cao Thái Hoàng '),
('4e272fc4-7875-78d6-7d32-6a1673ffca7c', 'D003', 'Phòng Nghiên Cứu Và Phát Triển', 'Qui tempora nisi similique laboriosam illum nesciunt. Unde similique omnis voluptatem sit nisi ipsum. Illum accusantium sit quia quidem; in et fuga.', '2021-02-07 07:29:40', 'Quốc Văn Mạnh ', '2022-01-01 00:00:08', 'Trần Minh Trung ');

-- 
-- Dumping data for table employee
--
-- Table `misa.web08.gpbl.tnmanh`.employee does not contain any data (it is empty)

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;